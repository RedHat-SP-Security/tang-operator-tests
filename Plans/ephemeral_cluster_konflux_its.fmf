summary: Run tang operator test in crc cluster for KONFLUX ITS

environment:
  TEST_OC_CLIENT: "oc"
  V: "2"
  KONFLUX: "1"
  OPERATOR_NAME: "nbde-tang-server"
  #pre released version
  #should be injected by tekton pipeline in KONFLUX
  #DOWNSTREAM_IMAGE_VERSION: "brew.registry.redhat.io/rh-osbs/iib:863070"
  TEST_EXTERNAL_CLUSTER_MODE: "1"
  DISABLE_IMAGE_MIRRORING: "true"

prepare:
  - how: shell
    script:
     - systemctl disable --now dnf-makecache.service || true
     - systemctl disable --now dnf-makecache.timer || true
     - dnf makecache
  - name: Install packages
    how: install
    package:
      # For working with the SNAPSHOT var
      - jq
      # Just for interacting with the images
      - podman
  - name: Pull the image taken from SNAPSHOT_64
    how: shell
    # Note, the ' character works here because the ${SNAPSHOT} is not a shell
    # environment variable. it is treated by tmt as a tmt variable which is
    # injected into the script before it is evaluated by bash.
    script: |
        echo "This is where the test script goes."
        echo "The base64 encoded snapshot is: ${SNAPSHOT}"

        DECODED_SNAPSHOT=$(echo "${SNAPSHOT}" | base64 -d)
        echo -n "The base64 decoded snapshot is: "
        echo "${DECODED_SNAPSHOT}"

        echo "It contains the following container images:"
        DOWNSTREAM_IMAGE_VERSION=$(echo "${DECODED_SNAPSHOT}" | jq -r '.components[].containerImage')
        echo "${DOWNSTREAM_IMAGE_VERSION}"

        echo "Image which will be used for testing:"
        echo "DOWNSTREAM_IMAGE_VERSION=$(echo "${SNAPSHOT}" | base64 -d | jq -r '.components[0].containerImage')" >> $TMT_PLAN_ENVIRONMENT_FILE
        echo "DECODED_SNAPSHOT=$(echo "${SNAPSHOT}" | base64 -d)" >> $TMT_PLAN_ENVIRONMENT_FILE
  - name: Store KUBECONFIG secret
    how: shell
    script: |
       #decoding kubeconfig content store it as tmt variable
       echo "DECODED_KUBECONFIG_CONTENT=\"$(echo "${KUBECONFIG_CONTENT}" | base64 -d)\"" >> $TMT_PLAN_ENVIRONMENT_FILE

discover:
- name: Install_and_setup_oc_operator_sdk
  how: fmf
  url: https://github.com/RedHat-SP-Security/common-cloud-orchestration
  ref: main
  test:
    - /Setup/install_setup_oc
    - /Setup/install_setup_operator-sdk
- name: Run_tang_operator_tests
  how: fmf
  url: https://github.com/RedHat-SP-Security/tang-operator-tests
  ref: ap_pipelines_fixes
  test:
    - /Setup/creating_test_namespace
    - /Sanity/DAST_test
    - /Sanity/functional_test

adjust+:
  - when: distro == rhel-9 or distro == centos-stream-9 
    prepare+:
      - how: shell
        script:
          - dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm https://dl.fedoraproject.org/pub/epel/epel-next-release-latest-9.noarch.rpm
  - when: OC is defined and OC == false
    enabled: false
    because: we want to run this plan only for KONFLUX CI, not PACKIT
execute:
    how: tmt
